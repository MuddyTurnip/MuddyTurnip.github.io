Â¬import gl from "../../../_shared/glossaryLinks"


#### How to:

To combine multiple {{gl.procedures-link}}, we can use the **Combine Actions** component from the **HAL Robotics** tab, **Procedure** panel. This component allows us to name our new {{gl.procedure-link}} with the _Alias_ input. This is extremely useful for identifying your {{gl.procedure-link}} later, particularly when using it more than once. The only mandatory input for this component is the list of {{gl.procedures-link}} and {{gl.actions-link}} to be _Combined_. In Grasshopper we can pass any number of wires into the same input and the **Combine Actions** component will create a {{gl.procedure-link}} for each branch of items it gets. However, to ensure that we keep a clean document and an easy means of changing the order of {{gl.procedures-link}} it is recommended to use something like a **Merge** component and flattening all the inputs. Once those are _Combined_, we will have single {{gl.procedure-link}} that executes each of our sub-{{gl.procedures-link}} one after the other.

Once a {{gl.procedure-link}} has been assigned to a {{gl.controller-link}} and {{gl.solving-d-link}} it is useful to see how a {{gl.simulation-link}} is progressing through that {{gl.procedure-link}} so we can see where any issues may lie or which phases might be taking longer than we expect. We can do that using the **Procedure Browser**. To access the **Procedure Browser**, we need to ensure that we have an **Execution Control** connected to a complete **Execute** component. Once that's in place we can double-click on the **Execution Control** to open the **Procedure Browser**. In this window we can see our execution controls, reset, play/pause, next, previous and loop as well as all of our actions. Alongside that we have a time slider that allows you to speed up or slow down the {{gl.simulation-link}} of your {{gl.procedures-link}} without affecting your program itself. The rest of the **Procedure Browser** window shows the {{gl.procedure-link}} that you are executing and the progress of each {{gl.action-link}} within it. This **Procedure Browser** view also serves to demonstrate the purpose of the _Compact_ input on our **Combine Procedure** component. By default, _Compact_ is set to `true`. This compacts all of the incoming {{gl.procedures-link}} and creates a single, flat list of {{gl.actions-link}}. If, however, we toggle _Compact_ to `false` we see that all of our previous {{gl.procedures-link}} are maintained in the hierarchy and can be collapsed or expanded to view their contents. The hierarchical, un-compacted mode can be particularly useful if you reuse sub-{{gl.procedures-link}}.

---
