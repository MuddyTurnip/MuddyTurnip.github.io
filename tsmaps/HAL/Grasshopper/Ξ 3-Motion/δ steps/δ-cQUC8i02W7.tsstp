Â¬import gl from "../../../_shared/glossaryLinks"


#### How to:

In order to **Synchronize** {{gl.motion-action-motions-link}}, we need to ensure we have multiple {{gl.procedures-link}} to work with and we always use one {{gl.procedure-link}} per {{gl.mechanism-link}} we want to program, whether it's a {{gl.manipulator-link}}, **Track** or {{gl.positioner-link}}. A setup for this could be as simple as having two [Robots]{{gl.manipulator-link-D}} each moving to a single {{gl.target-link}} in {{gl.joint-space-lc-link}}. To make this a little more demonstrative it would be preferable if the {{gl.motion-action-motions-link}} are dissimilar, for example one being long and the short or one fast and the other slow. To **Synchronize** the {{gl.motion-action-motions-link}}, we need to assign them **Sync Settings**. The **Sync Settings** component can be found in the **HAL Robotics** tab, **Motion** panel. We should assign a unique name, using the _Alias_ input, to the **Sync Settings** to ensure that they are easily identifiable later. Once those **Sync Settings** have been created, they need to be assigned to both of our {{gl.motion-action-moves-link}}. It is important to note that it must be the exact same **Sync Settings** passed to both. Your **Sync Settings** must only be used for one synchronous sequence of {{gl.motion-action-motions-link}} per {{gl.procedure-link}}, and synchronous sequences must contain the same number of {{gl.actions-link}} in each {{gl.procedure-link}} in which they're used. We can now **Solve** and see that the duration of our {{gl.motion-action-moves-link}} has been adjusted so that they both take the same amount of time. Also critically important in **Synchronization**, is the fact that all the motions start at the same time. We can test this out be adding a {{gl.motion-action-move-link}} to one of the {{gl.procedures-link}} prior to the **Synchronous** {{gl.motion-action-moves-link}}. When this is re-**Solved,** we can see that the second {{gl.manipulator-link}} implicitly waits for the first [Robot's]{{gl.manipulator-link-D}} {{gl.motion-action-move-link}} to finish before they both start their **Synchronous** {{gl.motion-action-moves-link}}.

---
